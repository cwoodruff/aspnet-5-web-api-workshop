{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Workshop Home \u00b6 For the source code for the workshop visit the ASP.NET 5 Web API Workshop GitHub repo. Interested in learning about designing, architecting and developing Web APIs using ASP.NET 5? Sign up for the VSLive! 2-Day Hands-On Training Seminar at Learn to Produce Effective Web APIs with ASP.NET 5 Workshop","title":"Home"},{"location":"#workshop-home","text":"For the source code for the workshop visit the ASP.NET 5 Web API Workshop GitHub repo. Interested in learning about designing, architecting and developing Web APIs using ASP.NET 5? Sign up for the VSLive! 2-Day Hands-On Training Seminar at Learn to Produce Effective Web APIs with ASP.NET 5 Workshop","title":"Workshop Home"},{"location":"about/","text":"About the Workshop \u00b6","title":"About"},{"location":"about/#about-the-workshop","text":"","title":"About the Workshop"},{"location":"installing-aspnet-5/","text":"Installing .NET 5 and ASP.NET 5 \u00b6 This page will instruct you how to download and install the .NET 5 SDK that includes ASP.NET 5 Web API. First, download the .NET SDK on your computer. Installing the SDK for .NET 5 \u00b6 Next install the .NET SDK on your computer. Next, open a terminal such as PowerShell , Command Prompt , or bash . Enter the following dotnet commands to verify that .NET 5 has been installed: dotnet --version You see the following output: 5.0.4 Congratulations! You're ready to create your first ASP.NET Web API. Next steps \u00b6 If you need some introduction to developing .NET applications, you can following the step-by-step tutorial or by watching .NET 101 videos on YouTube.","title":"Installing ASP.NET 5"},{"location":"installing-aspnet-5/#installing-net-5-and-aspnet-5","text":"This page will instruct you how to download and install the .NET 5 SDK that includes ASP.NET 5 Web API. First, download the .NET SDK on your computer.","title":"Installing .NET 5 and ASP.NET 5"},{"location":"installing-aspnet-5/#installing-the-sdk-for-net-5","text":"Next install the .NET SDK on your computer. Next, open a terminal such as PowerShell , Command Prompt , or bash . Enter the following dotnet commands to verify that .NET 5 has been installed: dotnet --version You see the following output: 5.0.4 Congratulations! You're ready to create your first ASP.NET Web API.","title":"Installing the SDK for .NET 5"},{"location":"installing-aspnet-5/#next-steps","text":"If you need some introduction to developing .NET applications, you can following the step-by-step tutorial or by watching .NET 101 videos on YouTube.","title":"Next steps"},{"location":"installing-mssql/","text":"Installing and Setting Up SQL Server 2019 \u00b6 Go to the Try SQL Server 2019 page and download the Developer version. Install locally. Creating the Chinook in MSSQL 2019 \u00b6 Get the Chinook database for this workshop in the GitHub repo. The file is a BAK backup so we will restore it to where you have MSSQL 2019 installed. It contains all data for the workshop and will be the starting point for the learning. Use SQL Server Management Studio to restore the database.","title":"Installing SQL Server"},{"location":"installing-mssql/#installing-and-setting-up-sql-server-2019","text":"Go to the Try SQL Server 2019 page and download the Developer version. Install locally.","title":"Installing and Setting Up SQL Server 2019"},{"location":"installing-mssql/#creating-the-chinook-in-mssql-2019","text":"Get the Chinook database for this workshop in the GitHub repo. The file is a BAK backup so we will restore it to where you have MSSQL 2019 installed. It contains all data for the workshop and will be the starting point for the learning. Use SQL Server Management Studio to restore the database.","title":"Creating the Chinook in MSSQL 2019"},{"location":"installing-postman/","text":"Installing and Setting Up Postman \u00b6 Download and install Postman for labs.","title":"Installing Postman"},{"location":"installing-postman/#installing-and-setting-up-postman","text":"Download and install Postman for labs.","title":"Installing and Setting Up Postman"},{"location":"introduction/","text":"Introduction to the Workshop \u00b6","title":"Introduction"},{"location":"introduction/#introduction-to-the-workshop","text":"","title":"Introduction to the Workshop"},{"location":"required-tech/","text":"Required Technologies for the Workshop \u00b6 Tech Where to download .NET 5 Download SQL Server Download Azure Account (optional) Create Account Postman Download","title":"Required Technology"},{"location":"required-tech/#required-technologies-for-the-workshop","text":"Tech Where to download .NET 5 Download SQL Server Download Azure Account (optional) Create Account Postman Download","title":"Required Technologies for the Workshop"},{"location":"setting-up-azure-sql/","text":"Creating and Setting up Your Azure Account for Azure SQL \u00b6","title":"Setting up Azure SQL"},{"location":"setting-up-azure-sql/#creating-and-setting-up-your-azure-account-for-azure-sql","text":"","title":"Creating and Setting up Your Azure Account for Azure SQL"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/api-business-rules/","text":"Using the Repository Pattern in You API Architecture \u00b6","title":"Developing the API Business Rules"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/api-business-rules/#using-the-repository-pattern-in-you-api-architecture","text":"","title":"Using the Repository Pattern in You API Architecture"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/caching-data/","text":"Caching Data in Your API \u00b6","title":"Caching Data in your API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/caching-data/#caching-data-in-your-api","text":"","title":"Caching Data in Your API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/designing-ntier-api/","text":"Designing the NTier API \u00b6","title":"Designing the NTier API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/designing-ntier-api/#designing-the-ntier-api","text":"","title":"Designing the NTier API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/documenting-with-openapi/","text":"Documenting your API with OpenAPI \u00b6","title":"Documenting your API with OpenAPI"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/documenting-with-openapi/#documenting-your-api-with-openapi","text":"","title":"Documenting your API with OpenAPI"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/identity/","text":"Identity in your Web API \u00b6","title":"Identity in your Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/identity/#identity-in-your-web-api","text":"","title":"Identity in your Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-api-endpoints/","text":"Developing the API endpoints \u00b6","title":"Developing the API Endpoints"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-api-endpoints/#developing-the-api-endpoints","text":"","title":"Developing the API endpoints"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/","text":"Developing the API Data access \u00b6 CREATE NEW PROJECTS FOR DATA AND DOMAIN \u00b6 ADD PROJECT REFERENCE FOR API PROJECT \u00b6 ADD PROJECT REFERENCE FOR DATA PROJECT \u00b6 INSTALL OR UPDATE THR EF CORE CLI \u00b6 dotnet tool install --global dotnet-ef dotnet tool update --global dotnet-ef ADD NUGET PACKAGES TO DATA PROJECT \u00b6 dotnet add package Microsoft.EntityFrameworkCore.SqlServer dotnet add package Microsoft.EntityFrameworkCore.Design SCAFFOLD DBCONTEXT AND ENTITIES FROM CHINOOK DATABASE \u00b6 Run the following command in Developer Command Prompt dotnet ef dbcontext scaffold \"Server=.;Database=Chinook;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer --context-dir Data --output-dir Entities MOVE ENTITIES IN DATA PROJECT TO DOMAIN \u00b6 Adjust the namespace for the Entities Add using reference in DBContext to Entities in Domain ADD REPOSITORY INTERFACES TO DOMAIN \u00b6 using System ; using System.Collections.Generic ; using System.Threading.Tasks ; using ChinookASPNETWebAPI.Domain.Entities ; namespace ChinookASPNETWebAPI.Domain.Repositories { public interface IAlbumRepository : IDisposable { Task < List < Album >> GetAll (); Task < Album > GetById ( int? id ); Task < List < Album >> GetByArtistId ( int id ); Task < Album > Add ( Album newAlbum ); Task < bool > Update ( Album album ); Task < bool > Delete ( int id ); } } ADD REPOSITORIES TO DATA \u00b6 using System.Collections.Generic ; using System.Linq ; using System.Threading.Tasks ; using ChinookASPNETWebAPI.Data.Data ; using ChinookASPNETWebAPI.Domain.Entities ; using ChinookASPNETWebAPI.Domain.Repositories ; using Microsoft.EntityFrameworkCore ; namespace ChinookASPNETWebAPI.Data.Repositories { public class AlbumRepository : IAlbumRepository { private readonly ChinookContext _context ; public AlbumRepository ( ChinookContext context ) { _context = context ; } private async Task < bool > AlbumExists ( int id ) => await _context . Albums . AnyAsync ( a => a . Id == id ); public void Dispose () => _context . Dispose (); public async Task < List < Album >> GetAll () => await _context . Albums . AsNoTrackingWithIdentityResolution (). ToListAsync (); public async Task < Album > GetById ( int? id ) { var dbAlbum = await _context . Albums . FindAsync ( id ); return dbAlbum ; } public async Task < Album > Add ( Album newAlbum ) { await _context . Albums . AddAsync ( newAlbum ); await _context . SaveChangesAsync (); return newAlbum ; } public async Task < bool > Update ( Album album ) { if (! await AlbumExists ( album . Id )) return false ; _context . Albums . Update ( album ); await _context . SaveChangesAsync (); return true ; } public async Task < bool > Delete ( int id ) { if (! await AlbumExists ( id )) return false ; var toRemove = await _context . Albums . FindAsync ( id ); _context . Albums . Remove ( toRemove ); await _context . SaveChangesAsync (); return true ; } public async Task < List < Album >> GetByArtistId ( int id ) => await _context . Albums . Where ( a => a . ArtistId == id ). AsNoTrackingWithIdentityResolution (). ToListAsync (); } } ADD DBCONTEXT TO DEPENDANCY INJECTION IN API PROJECT \u00b6 public static IServiceCollection AddConnectionProvider ( this IServiceCollection services , IConfiguration configuration ) { var connection = String . Empty ; if ( RuntimeInformation . IsOSPlatform ( OSPlatform . Windows )) { connection = configuration . GetConnectionString ( \"ChinookDbWindows\" ) ?? \"Server=.;Database=Chinook;Trusted_Connection=True;Application Name=ChinookASPNETCoreAPINTier\" ; } else if ( RuntimeInformation . IsOSPlatform ( OSPlatform . Linux ) || RuntimeInformation . IsOSPlatform ( OSPlatform . OSX )) { connection = configuration . GetConnectionString ( \"ChinookDbDocker\" ) ?? \"Server=localhost,1433;Database=Chinook;User=sa;Password=P@55w0rd;Trusted_Connection=False;Application Name=ChinookASPNETCoreAPINTier\" ; } services . AddDbContextPool < ChinookContext >( options => options . UseSqlServer ( connection )); return services ; } REMOVE ONCONFIGURING() FROM DBCONTEXT \u00b6 REMOVE THE DBCONTEXT CONSTRUCTOR W/O A PARAMETER \u00b6","title":"Developing Data Access for your Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#developing-the-api-data-access","text":"","title":"Developing the API Data access"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#create-new-projects-for-data-and-domain","text":"","title":"CREATE NEW PROJECTS FOR DATA AND DOMAIN"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#add-project-reference-for-api-project","text":"","title":"ADD PROJECT REFERENCE FOR API PROJECT"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#add-project-reference-for-data-project","text":"","title":"ADD PROJECT REFERENCE FOR DATA PROJECT"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#install-or-update-thr-ef-core-cli","text":"dotnet tool install --global dotnet-ef dotnet tool update --global dotnet-ef","title":"INSTALL OR UPDATE THR EF CORE CLI"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#add-nuget-packages-to-data-project","text":"dotnet add package Microsoft.EntityFrameworkCore.SqlServer dotnet add package Microsoft.EntityFrameworkCore.Design","title":"ADD NUGET PACKAGES TO DATA PROJECT"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#scaffold-dbcontext-and-entities-from-chinook-database","text":"Run the following command in Developer Command Prompt dotnet ef dbcontext scaffold \"Server=.;Database=Chinook;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer --context-dir Data --output-dir Entities","title":"SCAFFOLD DBCONTEXT AND ENTITIES FROM CHINOOK DATABASE"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#move-entities-in-data-project-to-domain","text":"Adjust the namespace for the Entities Add using reference in DBContext to Entities in Domain","title":"MOVE ENTITIES IN DATA PROJECT TO DOMAIN"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#add-repository-interfaces-to-domain","text":"using System ; using System.Collections.Generic ; using System.Threading.Tasks ; using ChinookASPNETWebAPI.Domain.Entities ; namespace ChinookASPNETWebAPI.Domain.Repositories { public interface IAlbumRepository : IDisposable { Task < List < Album >> GetAll (); Task < Album > GetById ( int? id ); Task < List < Album >> GetByArtistId ( int id ); Task < Album > Add ( Album newAlbum ); Task < bool > Update ( Album album ); Task < bool > Delete ( int id ); } }","title":"ADD REPOSITORY INTERFACES TO DOMAIN"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#add-repositories-to-data","text":"using System.Collections.Generic ; using System.Linq ; using System.Threading.Tasks ; using ChinookASPNETWebAPI.Data.Data ; using ChinookASPNETWebAPI.Domain.Entities ; using ChinookASPNETWebAPI.Domain.Repositories ; using Microsoft.EntityFrameworkCore ; namespace ChinookASPNETWebAPI.Data.Repositories { public class AlbumRepository : IAlbumRepository { private readonly ChinookContext _context ; public AlbumRepository ( ChinookContext context ) { _context = context ; } private async Task < bool > AlbumExists ( int id ) => await _context . Albums . AnyAsync ( a => a . Id == id ); public void Dispose () => _context . Dispose (); public async Task < List < Album >> GetAll () => await _context . Albums . AsNoTrackingWithIdentityResolution (). ToListAsync (); public async Task < Album > GetById ( int? id ) { var dbAlbum = await _context . Albums . FindAsync ( id ); return dbAlbum ; } public async Task < Album > Add ( Album newAlbum ) { await _context . Albums . AddAsync ( newAlbum ); await _context . SaveChangesAsync (); return newAlbum ; } public async Task < bool > Update ( Album album ) { if (! await AlbumExists ( album . Id )) return false ; _context . Albums . Update ( album ); await _context . SaveChangesAsync (); return true ; } public async Task < bool > Delete ( int id ) { if (! await AlbumExists ( id )) return false ; var toRemove = await _context . Albums . FindAsync ( id ); _context . Albums . Remove ( toRemove ); await _context . SaveChangesAsync (); return true ; } public async Task < List < Album >> GetByArtistId ( int id ) => await _context . Albums . Where ( a => a . ArtistId == id ). AsNoTrackingWithIdentityResolution (). ToListAsync (); } }","title":"ADD REPOSITORIES TO DATA"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#add-dbcontext-to-dependancy-injection-in-api-project","text":"public static IServiceCollection AddConnectionProvider ( this IServiceCollection services , IConfiguration configuration ) { var connection = String . Empty ; if ( RuntimeInformation . IsOSPlatform ( OSPlatform . Windows )) { connection = configuration . GetConnectionString ( \"ChinookDbWindows\" ) ?? \"Server=.;Database=Chinook;Trusted_Connection=True;Application Name=ChinookASPNETCoreAPINTier\" ; } else if ( RuntimeInformation . IsOSPlatform ( OSPlatform . Linux ) || RuntimeInformation . IsOSPlatform ( OSPlatform . OSX )) { connection = configuration . GetConnectionString ( \"ChinookDbDocker\" ) ?? \"Server=localhost,1433;Database=Chinook;User=sa;Password=P@55w0rd;Trusted_Connection=False;Application Name=ChinookASPNETCoreAPINTier\" ; } services . AddDbContextPool < ChinookContext >( options => options . UseSqlServer ( connection )); return services ; }","title":"ADD DBCONTEXT TO DEPENDANCY INJECTION IN API PROJECT"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#remove-onconfiguring-from-dbcontext","text":"","title":"REMOVE ONCONFIGURING() FROM DBCONTEXT"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/ntier-data-access/#remove-the-dbcontext-constructor-wo-a-parameter","text":"","title":"REMOVE THE DBCONTEXT CONSTRUCTOR W/O A PARAMETER"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/versioning/","text":"Versioning your Web API \u00b6","title":"Versioning your Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/versioning/#versioning-your-web-api","text":"","title":"Versioning your Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/what-is-a-web-api/","text":"What is a Web API? \u00b6","title":"What is a Web API?"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/what-is-a-web-api/#what-is-a-web-api","text":"","title":"What is a Web API?"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/what-is-rest/","text":"What is REST? \u00b6","title":"What is REST?"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/what-is-rest/#what-is-rest","text":"","title":"What is REST?"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/","text":"Your First ASP.NET 5 Web API \u00b6 Create a new ASP.NET Core Web API solution and project \u00b6 Configure the Solution and API Project for Workshop \u00b6 Solution name is ChinookASPNETWebAPI Project name is ChinookASPNETWebAPI.API Set Details for the Solution and API Project \u00b6 Target Framework is .NET 5.0 Authentication Type is None Set Configure for HTTPS to True Set Enable Docker to False Set Enable OpenAPI support to False A View of the Solution and API Project \u00b6 Results when you run the API Project \u00b6 Note -- I use a JSON Formatter in Chrome to make the Results look good. Delete the Existing Files in API Project \u00b6 Delete the following files in API project: * WeatherForcastController.cs * WeatherForcast.cs","title":"Your first ASP.NET Core Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#your-first-aspnet-5-web-api","text":"","title":"Your First ASP.NET 5 Web API"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#create-a-new-aspnet-core-web-api-solution-and-project","text":"","title":"Create a new ASP.NET Core Web API solution and project"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#configure-the-solution-and-api-project-for-workshop","text":"Solution name is ChinookASPNETWebAPI Project name is ChinookASPNETWebAPI.API","title":"Configure the Solution and API Project for Workshop"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#set-details-for-the-solution-and-api-project","text":"Target Framework is .NET 5.0 Authentication Type is None Set Configure for HTTPS to True Set Enable Docker to False Set Enable OpenAPI support to False","title":"Set Details for the Solution and API Project"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#a-view-of-the-solution-and-api-project","text":"","title":"A View of the Solution and API Project"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#results-when-you-run-the-api-project","text":"Note -- I use a JSON Formatter in Chrome to make the Results look good.","title":"Results when you run the API Project"},{"location":"Standing%20Up%20an%20ASP.NET%20Core%20Web%20API/your-first-aspnet-core-web-api/#delete-the-existing-files-in-api-project","text":"Delete the following files in API project: * WeatherForcastController.cs * WeatherForcast.cs","title":"Delete the Existing Files in API Project"},{"location":"Testing%20Your%20AP/integration-testing/","text":"Creating and using Integrating Testing for your API \u00b6","title":"Creating and using Integrating Testing for your API"},{"location":"Testing%20Your%20AP/integration-testing/#creating-and-using-integrating-testing-for-your-api","text":"","title":"Creating and using Integrating Testing for your API"},{"location":"Testing%20Your%20AP/unit-testing/","text":"Creating and using Unit Testing for your API \u00b6","title":"Creating and using Unit Testing for your API"},{"location":"Testing%20Your%20AP/unit-testing/#creating-and-using-unit-testing-for-your-api","text":"","title":"Creating and using Unit Testing for your API"}]}